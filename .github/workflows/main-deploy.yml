name: Next.js CD

on:
  workflow_run:
    workflows: ['Test']
    branches: [main]
    types:
      - completed

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    environment: Production
    permissions:
      id-token: write
      contents: read

    strategy:
      matrix:
        node-version: [latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.4.0

      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: us-east-1

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: latest

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build
        env:
          NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_TMDB_URL: ${{ secrets.NEXT_PUBLIC_TMDB_URL }}
          TMDB_V3_KEY: ${{ secrets.TMDB_V3_KEY }}
          TMDB_V4_KEY: ${{ secrets.TMDB_V4_KEY }}
          COOKIE_DOMAIN: ${{ secrets.COOKIE_DOMAIN }}
          SITE_GITHUB_ID: ${{ secrets.SITE_GITHUB_ID }}
          SITE_GITHUB_SCOPE: ${{ secrets.SITE_GITHUB_SCOPE }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: Production
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3.4.0
      - name: Deploy in EC2
        env:
          USER_NAME: ${{ secrets.AWS_USERNAME }}
          HOSTNAME: ${{ secrets.AWS_HOSTNAME }}
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME}

            #Now we have got the access of EC2 and we will start the deploy .
            cd /home/ec2-user/dashboard-frontend &&
            git checkout master &&
            git fetch --all &&
            git reset --hard origin/master &&
            git pull origin master &&
            pnpm build
